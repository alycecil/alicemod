alicemod_stellar_defense_platfrom_x5 = {
	entity = ""
	construction_entity = "orbital_ring_construction_entity"
	construction_blocks_and_blocked_by = none
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = 0 y = 0 }
	scales_with_planet = yes
	build_time = 125

	resources = {
		category = megastructures
		cost = {
			alloys = 1500
			influence = 50
		}
	}
	construction_blocks_and_blocked_by = none

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
    		planet_possible = {
#    			custom_tooltip = { fail_text = "must_build_around_asteroid"			is_asteroid = yes }
    			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
    			custom_tooltip = { fail_text = "requires_survey_not_habitable"		is_surveyed = { who = prev.from status = yes } is_planet_habitable = no }
    		}
    	}

	# root = system
	# from = country
	ai_weight = {
		factor = 3

		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}

		modifier = {
			factor = 0
			any_system_planet = {
				is_planet_class = pc_habitat
				is_colony = no
			}
		}

		modifier = {
			factor = 2
			solar_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}
		modifier = {
			factor = 1.5
			any_neighbor_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}

		modifier = {
			factor = 2.5
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
	}

	on_build_start = {}
	on_build_cancel = {}

	on_build_complete = {
	    save_event_target_as = giga_system
        fromfrom.planet = {
            save_event_target_as = giga_planet
        }
		create_fleet = {
        	name = "Defensive Platforms"
        	settings = { spawn_debris = no }
        	effect = {
        		set_owner = from
        		while = {
                    count = 5
                    create_ship = {
                        name = "Defensive Platform SM"
                        random_existing_design = military_station_small
                    }
                    set_location = {
                        target = event_target:giga_planet
                        distance = 1
                        angle = random
                    }
        		}
        	}
        }
		remove_megastructure = fromfrom
	}
}

alicemod_stellar_defense_platfrom_x25 = {
	entity = ""
	construction_entity = "orbital_ring_construction_entity"
	construction_blocks_and_blocked_by = none
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = 0 y = 0 }
	scales_with_planet = yes
	build_time = 550

	resources = {
		category = megastructures
		cost = {
			alloys = 7250
			influence = 150
		}
	}
	construction_blocks_and_blocked_by = none

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
    		planet_possible = {
    			custom_tooltip = { fail_text = "must_build_around_asteroid"			is_asteroid = yes }
    			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
    			custom_tooltip = { fail_text = "requires_survey_not_habitable"		is_surveyed = { who = prev.from status = yes } is_planet_habitable = no }
    		}
    	}

	# root = system
	# from = country
	ai_weight = {
		factor = 3

		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}

		modifier = {
			factor = 0
			any_system_planet = {
				is_planet_class = pc_habitat
				is_colony = no
			}
		}

		modifier = {
			factor = 2
			solar_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}
		modifier = {
			factor = 1.5
			any_neighbor_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}

		modifier = {
			factor = 2.5
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
	}

	on_build_start = {}
	on_build_cancel = {}

	on_build_complete = {
	    save_event_target_as = giga_system
        fromfrom.planet = {
            save_event_target_as = giga_planet
        }
		create_fleet = {
        	name = "Defensive Platforms"
        	settings = { spawn_debris = no }
        	effect = {
        		set_owner = from
                while = {
                    count = 25
                    create_ship = {
                        name = "Defensive Platform SM"
                        random_existing_design = military_station_small
                    }
                    set_location = {
                        target = event_target:giga_planet
                        distance = 3
                        angle = random
                    }
                }
        	}
        }
		remove_megastructure = fromfrom
	}
}

alicemod_giga_artificial_asteroid = {
	entity = ""
	construction_entity = "orbital_ring_construction_entity"
	construction_blocks_and_blocked_by = none
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = 0 y = 0 }
	scales_with_planet = yes
	build_time = 1850

	resources = {
		category = megastructures
		cost = {
			alloys = 45000
			influence = 500
		}
	}
	construction_blocks_and_blocked_by = none

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
    		planet_possible = {
    			custom_tooltip = { fail_text = "must_build_around_asteroid"			is_asteroid = no }
    			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
    			# custom_tooltip = { fail_text = "requires_survey_not_habitable"		is_surveyed = { who = prev.from status = yes } is_planet_habitable = no }
    		}
    	}

	# root = system
	# from = country
	ai_weight = {
		factor = 3

		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}

		modifier = {
			factor = 0
			any_system_planet = {
				is_planet_class = pc_habitat
				is_colony = no
			}
		}

		modifier = {
			factor = 2
			solar_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}
		modifier = {
			factor = 1.5
			any_neighbor_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}

		modifier = {
			factor = 2.5
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
	}

	on_build_start = {
	}
	on_build_cancel = {}

	on_build_complete = {
	    save_event_target_as = giga_system
        fromfrom.planet = {
            save_event_target_as = giga_planet
        }
		create_fleet = {
            name = "Defensive Orbital Fleet"
            settings = { spawn_debris = no }
            effect = {
                set_owner = from
                create_ship = {
                    name = "Minor Asteroid Artillery"
                    random_existing_design = asteroid_artillery
                }
                set_location = {
                    target = event_target:giga_planet
                    distance = 0.5
                    angle = 0
                }
                apply_ast_art_tech_upgrades = yes
            }
        }
		remove_megastructure = fromfrom
	}
}


alicemod_stellar_defense_large = {
	entity = ""
	construction_entity = "orbital_ring_construction_entity"
	construction_blocks_and_blocked_by = none
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = 0 y = 0 }
	scales_with_planet = yes
	build_time = 125

	resources = {
		category = megastructures
		cost = {
			alloys = 3500
			influence = 50
		}
	}
	construction_blocks_and_blocked_by = none

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
    		planet_possible = {
    			custom_tooltip = { fail_text = "must_build_around_asteroid"			is_asteroid = yes }
    			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
    			custom_tooltip = { fail_text = "requires_survey_not_habitable"		is_surveyed = { who = prev.from status = yes } is_planet_habitable = no }
    		}
    	}

	# root = system
	# from = country
	ai_weight = {
		factor = 3

		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}

		modifier = {
			factor = 0
			any_system_planet = {
				is_planet_class = pc_habitat
				is_colony = no
			}
		}

		modifier = {
			factor = 2
			solar_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}
		modifier = {
			factor = 1.5
			any_neighbor_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}

		modifier = {
			factor = 2.5
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
	}

	on_build_start = {}
	on_build_cancel = {}

	on_build_complete = {
	    save_event_target_as = giga_system
        fromfrom.planet = {
            save_event_target_as = giga_planet
        }
		create_fleet = {
            name = "Defensive Station"
            settings = { spawn_debris = no }
            effect = {
                set_owner = from
                create_ship = {
                    name = "Orbital Defensive Station"
                    random_existing_design = military_station_large
                }
                set_location = {
                    target = event_target:giga_planet
                    distance = 0.5
                    angle = 0
                }
            }
        }
		remove_megastructure = fromfrom
	}
}

alicemod_stellar_defense_large_x10 = {
	entity = ""
	construction_entity = "orbital_ring_construction_entity"
	construction_blocks_and_blocked_by = none
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = 0 y = 0 }
	scales_with_planet = yes
	build_time = 1250

	resources = {
		category = megastructures
		cost = {
			alloys = 35000
			influence = 250
		}
	}
	construction_blocks_and_blocked_by = none

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
    		planet_possible = {
    			custom_tooltip = { fail_text = "must_build_around_asteroid"			is_asteroid = yes }
    			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
    			custom_tooltip = { fail_text = "requires_survey_not_habitable"		is_surveyed = { who = prev.from status = yes } is_planet_habitable = no }
    		}
    	}

	# root = system
	# from = country
	ai_weight = {
		factor = 3

		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}

		modifier = {
			factor = 0
			any_system_planet = {
				is_planet_class = pc_habitat
				is_colony = no
			}
		}

		modifier = {
			factor = 2
			solar_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}
		modifier = {
			factor = 1.5
			any_neighbor_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}

		modifier = {
			factor = 2.5
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
	}

	on_build_start = {}
	on_build_cancel = {}

	on_build_complete = {
	    save_event_target_as = giga_system
        fromfrom.planet = {
            save_event_target_as = giga_planet
        }
		create_fleet = {
            name = "Defensive Station"
            settings = { spawn_debris = no }
            effect = {
                set_owner = from
                while = {
                    count = 10
                    create_ship = {
                        name = "Orbital Defensive Station"
                        random_existing_design = military_station_large
                    }
                    set_location = {
                        target = event_target:giga_planet
                        distance = 0.5
                        angle = 0
                    }
                }
            }
        }
		remove_megastructure = fromfrom
	}
}


alicemod_bruteforce_orbital_ring = {
	entity = ""
	construction_entity = "orbital_ring_construction_entity"
	construction_blocks_and_blocked_by = none
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = 0 y = 0 }
	scales_with_planet = yes
	build_time = 1250

	resources = {
		category = megastructures
		cost = {
			alloys = 10000
			influence = 250
		}
	}
	construction_blocks_and_blocked_by = none

	potential = { NOT = { has_technology = tech_orbital_ring_tier_1 } }

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_surveyed_planet"
				is_surveyed = { # prevent leaking habitability information
					who = prev.from
					status = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "requires_colonized_planet_orbital_ring"
				is_colony = yes
				exists = owner
				exists = controller
				controller = { is_same_value = prev.owner }
			}
			custom_tooltip = {
				fail_text = "requires_not_hostile_or_primitive"
				NOR = {
					planet_is_hostile_or_crisis = yes
					AND = {
						exists = owner
						owner = {
							is_country_type = primitive
						}
					}
				}
			}
			custom_tooltip = {
                fail_text = "requires_no_existing_megastructure"
                #can_build_megastructure_on_planet = yes
                NOR = {
					has_planet_flag = megastructure
					has_planet_flag = has_megastructure
                    has_planet_flag = ruined_orbital_ring_planet
                    solar_system = {
                        has_star_flag = ring_world_built
                    }
                    is_planet_class = pc_ringworld_habitable
                    is_planet_class = pc_ringworld_habitable_damaged
                    is_planet_class = pc_ringworld_tech
                    is_planet_class = pc_ringworld_tech_damaged
                    is_planet_class = pc_ringworld_seam
                    is_planet_class = pc_ringworld_seam_damaged
                    is_planet_class = pc_habitat
                }
            }
		}
	}

	# root = system
	# from = country
	ai_weight = {
		factor = 3

		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}

		modifier = {
			factor = 0
			any_system_planet = {
				is_planet_class = pc_habitat
				is_colony = no
			}
		}

		modifier = {
			factor = 2
			solar_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}
		modifier = {
			factor = 1.5
			any_neighbor_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
	}

	on_build_start = {}
	on_build_cancel = {}

	on_build_complete = {
		fromfrom.planet = {
			set_planet_flag = has_megastructure
			save_event_target_as = orbital_ring_planet

			create_starbase = {
				size = orbital_ring_tier_1
				owner = FROM
				#module = <starbase_module>
				#building = <starbase_building>
				effect = { }
			}
		}
		remove_megastructure = fromfrom
	}
}


alicemod_bruteforce_orbital_citadel = {
	entity = ""
	construction_entity = "orbital_ring_construction_entity"
	construction_blocks_and_blocked_by = none
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = 0 y = 0 }
	scales_with_planet = yesd
	build_time = 2450

	resources = {
		category = megastructures
		cost = {
			alloys = 75000
			influence = 250
		}
	}
	construction_blocks_and_blocked_by = none

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_surveyed_planet"
				is_surveyed = { # prevent leaking habitability information
					who = prev.from
					status = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "requires_not_hostile_or_primitive"
				NOR = {
					planet_is_hostile_or_crisis = yes
					AND = {
						exists = owner
						owner = {
							is_country_type = primitive
						}
					}
				}
			}
		}
	}

	# root = system
	# from = country
	ai_weight = {
		factor = 3

		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}

		modifier = {
			factor = 0
			any_system_planet = {
				is_planet_class = pc_habitat
				is_colony = no
			}
		}

		modifier = {
			factor = 2
			solar_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}
		modifier = {
			factor = 1.5
			any_neighbor_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
	}

	on_build_start = {}
	on_build_cancel = {}

	on_build_complete = {
		fromfrom.planet = {

			create_starbase = {
				owner = FROM
				size = "starbase_citadel"

                module = "hangar_bay"
                module = "hangar_bay"
                module = "hangar_bay"
                module = "missile_battery"
                module = "missile_battery"
                module = "missile_battery"
                module = "missile_battery"
                module = "gun_battery"
                module = "gun_battery"
                module = "gun_battery"

                building = "crew_quarters"
                building = "target_uplink_computer"
                building = "defense_grid"
		        building = "listening_post"
			}
		}
		remove_megastructure = fromfrom
	}
}
